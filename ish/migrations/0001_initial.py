# Generated by Django 5.2.3 on 2025-06-18 05:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hisobot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomi', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Xodim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ism', models.CharField(max_length=100)),
                ('familiya', models.CharField(max_length=100)),
                ('ishlayapti', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefon', models.CharField(blank=True, max_length=20, null=True)),
                ('yosh', models.PositiveIntegerField(blank=True, null=True)),
                ('soato', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dalolatnoma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('okpo', models.CharField(max_length=8)),
                ('inn', models.CharField(max_length=9)),
                ('soato4', models.CharField(max_length=20)),
                ('nomi', models.CharField(blank=True, max_length=400, null=True)),
                ('yaratilgan_vaqti', models.DateTimeField(auto_now_add=True)),
                ('yangilangan_vaqti', models.DateTimeField(auto_now=True)),
                ('izoh', models.TextField(blank=True, null=True)),
                ('dalolatnoma_fayli', models.FileField(blank=True, null=True, upload_to='dalolatnomalar/')),
                ('tasdiqlangan', models.BooleanField(default=False)),
                ('tasdiqlangan_vaqti', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dalolatnomalar', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dalolatnoma',
                'verbose_name_plural': 'Dalolatnomalar',
                'ordering': ['-yaratilgan_vaqti'],
            },
        ),
        migrations.CreateModel(
            name='Excelupload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('okpo', models.CharField(max_length=8)),
                ('inn', models.CharField(max_length=9)),
                ('soato', models.CharField(max_length=20)),
                ('nomi', models.CharField(max_length=400)),
                ('sababi', models.CharField(max_length=200)),
                ('opf', models.CharField(max_length=10)),
                ('hisobot_nomi', models.CharField(max_length=200)),
                ('hisobot_davri', models.CharField(max_length=50)),
                ('faoliyatsiz', models.BooleanField(default=False)),
                ('xat_turi', models.CharField(max_length=50)),
                ('xat_sanasi', models.DateField(blank=True, null=True)),
                ('aniqlangan_sanasi', models.DateField(auto_now_add=True)),
                ('pdf_fayli', models.FileField(blank=True, null=True, upload_to='jarima_xatlari')),
                ('tasdiqlangan', models.BooleanField(default=False)),
                ('tasdiqlangan_vaqt', models.DateTimeField(blank=True, null=True)),
                ('dalolatnomasi_mavjudligi', models.BooleanField(default=False)),
                ('nazoratdan_chiqarilgan', models.BooleanField(default=False)),
                ('izoh', models.TextField(blank=True, null=True)),
                ('xat_izohi', models.TextField(blank=True, null=True)),
                ('kiritgan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='excel_uploads', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hisobotdavri',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('tugash_sanasi', models.DateField(blank=True, null=True)),
                ('nomi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hisobot_davri', to='ish.hisobot')),
            ],
        ),
        migrations.CreateModel(
            name='Topshiriq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomi', models.CharField(max_length=200)),
                ('tavsif', models.TextField()),
                ('bajarilgan', models.BooleanField(default=False)),
                ('tugash_sanasi', models.DateField(blank=True, null=True)),
                ('yaratilgan_vaqti', models.DateTimeField(auto_now_add=True)),
                ('yangilangan_vaqti', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(blank=True, null=True, upload_to='topshiriqlar/')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topshiriqlar', to=settings.AUTH_USER_MODEL)),
                ('masullar', models.ManyToManyField(blank=True, related_name='topshiriqlar', to='ish.xodim')),
            ],
            options={
                'verbose_name': 'Topshiriq',
                'verbose_name_plural': 'Topshiriqlar',
                'ordering': ['-yaratilgan_vaqti'],
            },
        ),
    ]
